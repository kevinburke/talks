Writing a PHP client to consume an API

In this talk we will dive into the process of writing a PHP wrapper for an HTTP
API. We will look at some best practices for library design and how to design
your library to be flexible and to easily handle changes in the API.

At heart, a wrapper library is a new interface to an API, and it's surprisingly
hard to get right. Does it provide the right level of abstraction? Have you
made it easy for people to get started? How do you know your library does
everything you think it does? If the API changes, is it easy to update the
library or add new resources? We will look at all of these questions, and give
specific best practice examples for consuming an HTTP API.

We will also take a look at the other side of the equation - how should you
design your API so that people can easily create clients for it? We will look
at some of the things we've learned at Twilio, including the time we changed
our API and broke all of our client libraries for 15 minutes. We will also take
a look at how people consume API's, and what that means for your libraries and
for your documentation.

